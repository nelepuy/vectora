import React, { useMemo } from "react";
import "./TaskStats.css";

function TaskStats({ tasks }) {
  const stats = useMemo(() => {
    const now = new Date();
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
    
    return {
      total: tasks.length,
      completed: tasks.filter(t => t.status).length,
      active: tasks.filter(t => !t.status).length,
      
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
      highPriority: tasks.filter(t => t.priority === 'high' && !t.status).length,
      normalPriority: tasks.filter(t => t.priority === 'normal' && !t.status).length,
      lowPriority: tasks.filter(t => t.priority === 'low' && !t.status).length,
      
      // –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞–¥–∞—á–∏
      todayTasks: tasks.filter(t => {
        if (!t.date_time) return false;
        const taskDate = new Date(t.date_time);
        return taskDate.toDateString() === today.toDateString();
      }).length,
      
      // –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
      overdue: tasks.filter(t => {
        if (!t.date_time || t.status) return false;
        const taskDate = new Date(t.date_time);
        return taskDate < now;
      }).length,
    };
  }, [tasks]);

  const completionRate = stats.total > 0 
    ? Math.round((stats.completed / stats.total) * 100) 
    : 0;

  return (
    <div className="task-stats">
      <div className="stats-grid">
        {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="stat-card total">
          <div className="stat-icon">üìä</div>
          <div className="stat-content">
            <div className="stat-value">{stats.total}</div>
            <div className="stat-label">–í—Å–µ–≥–æ –∑–∞–¥–∞—á</div>
          </div>
        </div>

        <div className="stat-card active">
          <div className="stat-icon">‚ö°</div>
          <div className="stat-content">
            <div className="stat-value">{stats.active}</div>
            <div className="stat-label">–ê–∫—Ç–∏–≤–Ω—ã–µ</div>
          </div>
        </div>

        <div className="stat-card completed">
          <div className="stat-icon">‚úÖ</div>
          <div className="stat-content">
            <div className="stat-value">{stats.completed}</div>
            <div className="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
          </div>
        </div>

        <div className="stat-card completion">
          <div className="stat-icon">üìà</div>
          <div className="stat-content">
            <div className="stat-value">{completionRate}%</div>
            <div className="stat-label">–í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
          </div>
        </div>

        {/* –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã */}
        {stats.highPriority > 0 && (
          <div className="stat-card priority-high">
            <div className="stat-icon">üî•</div>
            <div className="stat-content">
              <div className="stat-value">{stats.highPriority}</div>
              <div className="stat-label">–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç</div>
            </div>
          </div>
        )}

        {/* –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞–¥–∞—á–∏ */}
        {stats.todayTasks > 0 && (
          <div className="stat-card today">
            <div className="stat-icon">üìÖ</div>
            <div className="stat-content">
              <div className="stat-value">{stats.todayTasks}</div>
              <div className="stat-label">–ù–∞ —Å–µ–≥–æ–¥–Ω—è</div>
            </div>
          </div>
        )}

        {/* –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ */}
        {stats.overdue > 0 && (
          <div className="stat-card overdue">
            <div className="stat-icon">‚ö†Ô∏è</div>
            <div className="stat-content">
              <div className="stat-value">{stats.overdue}</div>
              <div className="stat-label">–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ</div>
            </div>
          </div>
        )}
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
      {stats.total > 0 && (
        <div className="progress-section">
          <div className="progress-label">
            <span>–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</span>
            <span className="progress-percentage">{completionRate}%</span>
          </div>
          <div className="progress-bar">
            <div 
              className="progress-fill" 
              style={{ width: `${completionRate}%` }}
            />
          </div>
        </div>
      )}
    </div>
  );
}

export default TaskStats;
