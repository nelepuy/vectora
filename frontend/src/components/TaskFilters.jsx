import React, { useState, useEffect } from "react";
import { FaSearch, FaTimes } from "react-icons/fa";
import "./TaskFilters.css";

function TaskFilters({ onFilterChange, initialFilters = {} }) {
  const [filters, setFilters] = useState({
    search: initialFilters.search || "",
    status: initialFilters.status || "all",
    priority: initialFilters.priority || "all",
    category: initialFilters.category || "",
  });

  // –î–µ–±–∞—É–Ω—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å–∏–º–≤–æ–ª–µ)
  useEffect(() => {
    const timer = setTimeout(() => {
      onFilterChange(filters);
    }, 300);

    return () => clearTimeout(timer);
  }, [filters]);

  const handleSearchChange = (e) => {
    setFilters((prev) => ({ ...prev, search: e.target.value }));
  };

  const handleStatusChange = (e) => {
    setFilters((prev) => ({ ...prev, status: e.target.value }));
  };

  const handlePriorityChange = (e) => {
    setFilters((prev) => ({ ...prev, priority: e.target.value }));
  };

  const handleCategoryChange = (e) => {
    setFilters((prev) => ({ ...prev, category: e.target.value }));
  };

  const clearFilters = () => {
    const clearedFilters = { search: "", status: "all", priority: "all", category: "" };
    setFilters(clearedFilters);
    onFilterChange(clearedFilters);
  };

  const hasActiveFilters =
    filters.search || filters.status !== "all" || filters.priority !== "all" || filters.category;

  return (
    <div className="task-filters">
      {/* –ü–æ–∏—Å–∫ */}
      <div style={{ flex: "1", minWidth: "200px", position: "relative" }}>
        <FaSearch
          style={{
            position: "absolute",
            left: "12px",
            top: "50%",
            transform: "translateY(-50%)",
            color: "var(--tg-gray)",
            fontSize: "0.9rem",
          }}
        />
        <input
          type="text"
          className="filter-input"
          placeholder="–ü–æ–∏—Å–∫ –∑–∞–¥–∞—á..."
          value={filters.search}
          onChange={handleSearchChange}
          style={{ paddingLeft: "38px" }}
        />
      </div>

      {/* –°—Ç–∞—Ç—É—Å */}
      <select
        className="filter-select"
        value={filters.status}
        onChange={handleStatusChange}
      >
        <option value="all">–í—Å–µ –∑–∞–¥–∞—á–∏</option>
        <option value="false">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
        <option value="true">–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ</option>
      </select>

      {/* –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç */}
      <select
        className="filter-select"
        value={filters.priority}
        onChange={handlePriorityChange}
      >
        <option value="all">–õ—é–±–æ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç</option>
        <option value="low">üíé –ù–∏–∑–∫–∏–π</option>
        <option value="normal">‚ö° –°—Ä–µ–¥–Ω–∏–π</option>
        <option value="high">üî• –í—ã—Å–æ–∫–∏–π</option>
      </select>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
      <input
        type="text"
        className="filter-input"
        placeholder="üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è..."
        value={filters.category}
        onChange={handleCategoryChange}
        list="filter-categories-list"
      />
      <datalist id="filter-categories-list">
        <option value="–†–∞–±–æ—Ç–∞" />
        <option value="–õ–∏—á–Ω–æ–µ" />
        <option value="–£—á–µ–±–∞" />
        <option value="–î–æ–º" />
        <option value="–ó–¥–æ—Ä–æ–≤—å–µ" />
      </datalist>

      {/* –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã */}
      {hasActiveFilters && (
        <button className="clear-filters-btn" onClick={clearFilters}>
          <FaTimes style={{ marginRight: "6px" }} />
          –û—á–∏—Å—Ç–∏—Ç—å
        </button>
      )}
    </div>
  );
}

export default TaskFilters;
