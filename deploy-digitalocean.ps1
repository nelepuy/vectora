# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π Vectora –Ω–∞ DigitalOcean App Platform
# =============================================================
# –¢—Ä–µ–±—É–µ—Ç: GitHub Student Pack ($200 –∫—Ä–µ–¥–∏—Ç–æ–≤)
# –°—Ç–æ–∏–º–æ—Å—Ç—å: ~$12/–º–µ—Å—è—Ü (1 –≥–æ–¥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å –∫—Ä–µ–¥–∏—Ç–∞–º–∏)

Write-Host ""
Write-Host "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" -ForegroundColor Cyan
Write-Host "‚ïë   üåä Vectora ‚Üí DigitalOcean              ‚ïë" -ForegroundColor Cyan
Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" -ForegroundColor Cyan
Write-Host ""

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$APP_NAME = "vectora-app"
$REGION = "fra"  # Frankfurt (–±–ª–∏–∂–∞–π—à–∏–π –∫ –†–æ—Å—Å–∏–∏ —Ä–µ–≥–∏–æ–Ω)
$BOT_TOKEN = "8314825408:AAHbl_06QBEG8B64FiP8Cb0YfwoaV-7H2lQ"
$GITHUB_REPO = "nelepuy/vectora"

Write-Host "üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:" -ForegroundColor Yellow
Write-Host "   App Name: $APP_NAME" -ForegroundColor Gray
Write-Host "   Region: Frankfurt (fra)" -ForegroundColor Gray
Write-Host "   GitHub: $GITHUB_REPO" -ForegroundColor Gray
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ doctl
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DigitalOcean CLI..." -ForegroundColor Yellow
$doctlInstalled = Get-Command doctl -ErrorAction SilentlyContinue
if (-not $doctlInstalled) {
    Write-Host "‚ùå doctl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Red
    Write-Host ""
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞:" -ForegroundColor Yellow
    Write-Host "   winget install DigitalOcean.Doctl" -ForegroundColor White
    Write-Host ""
    Write-Host "   –ò–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ: https://github.com/digitalocean/doctl/releases" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üéì GitHub Student Pack:" -ForegroundColor Cyan
    Write-Host "   1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å: https://education.github.com/pack" -ForegroundColor White
    Write-Host "   2. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ DigitalOcean ($200 –∫—Ä–µ–¥–∏—Ç–æ–≤)" -ForegroundColor White
    Write-Host "   3. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç: https://www.digitalocean.com/" -ForegroundColor White
    Write-Host ""
    pause
    exit 1
}
Write-Host "‚úÖ doctl —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Green
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
Write-Host "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..." -ForegroundColor Yellow
$authCheck = doctl auth list 2>$null
if (-not $authCheck -or $authCheck -match "no authentication contexts") {
    Write-Host "‚ö†Ô∏è  –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ DigitalOcean" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "üìù –®–∞–≥–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:" -ForegroundColor Cyan
    Write-Host "   1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://cloud.digitalocean.com/account/api/tokens" -ForegroundColor White
    Write-Host "   2. –ù–∞–∂–º–∏—Ç–µ 'Generate New Token'" -ForegroundColor White
    Write-Host "   3. –ò–º—è: vectora-deploy" -ForegroundColor White
    Write-Host "   4. –ü—Ä–∞–≤–∞: Read –∏ Write" -ForegroundColor White
    Write-Host "   5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω" -ForegroundColor White
    Write-Host ""
    $token = Read-Host "–í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω —Å—é–¥–∞"
    
    doctl auth init --access-token $token
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!" -ForegroundColor Red
        pause
        exit 1
    }
}
Write-Host "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!" -ForegroundColor Green
Write-Host ""

# –°–æ–∑–¥–∞–Ω–∏–µ PostgreSQL Database
Write-Host "üóÑÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ PostgreSQL Database..." -ForegroundColor Yellow
Write-Host "   (—ç—Ç–æ –∑–∞–π–º—ë—Ç 3-5 –º–∏–Ω—É—Ç)" -ForegroundColor Gray

$DB_NAME = "vectora-db"
$DB_CLUSTER = "vectora-postgres"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î
$existingDb = doctl databases list --format Name --no-header | Select-String -Pattern $DB_CLUSTER -Quiet
if ($existingDb) {
    Write-Host "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!" -ForegroundColor Green
} else {
    doctl databases create $DB_CLUSTER `
        --engine pg `
        --version 15 `
        --region $REGION `
        --size db-s-1vcpu-1gb `
        --num-nodes 1 2>$null
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ë–î!" -ForegroundColor Red
        pause
        exit 1
    }
    
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î..." -ForegroundColor Gray
    Start-Sleep -Seconds 60
    Write-Host "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞!" -ForegroundColor Green
}
Write-Host ""

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ë–î
Write-Host "üîë –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ë–î..." -ForegroundColor Yellow
$dbInfo = doctl databases get $DB_CLUSTER --format ID,Connection --no-header 2>$null
if (-not $dbInfo) {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ë–î!" -ForegroundColor Red
    pause
    exit 1
}

$DB_ID = ($dbInfo -split '\s+')[0]
$DB_CONNECTION = (doctl databases connection $DB_CLUSTER --format URI --no-header) -replace "defaultdb", "vectora"

Write-Host "‚úÖ –î–∞–Ω–Ω—ã–µ –ë–î –ø–æ–ª—É—á–µ–Ω—ã!" -ForegroundColor Green
Write-Host ""

# –°–æ–∑–¥–∞–Ω–∏–µ app.yaml –¥–ª—è App Platform
Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ App Platform..." -ForegroundColor Yellow

$SECRET_KEY = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 64 | ForEach-Object {[char]$_})

$appYaml = @"
name: $APP_NAME
region: $REGION

databases:
- name: postgres
  engine: PG
  production: true
  cluster_name: $DB_CLUSTER

services:
# Backend API
- name: backend
  dockerfile_path: backend/Dockerfile
  source_dir: /
  github:
    repo: $GITHUB_REPO
    branch: main
    deploy_on_push: true
  
  http_port: 8000
  
  instance_count: 1
  instance_size_slug: basic-xxs
  
  envs:
  - key: DATABASE_URL
    scope: RUN_TIME
    value: `${postgres.DATABASE_URL}
  - key: SECRET_KEY
    scope: RUN_TIME
    value: $SECRET_KEY
  - key: TELEGRAM_BOT_TOKEN
    scope: RUN_TIME
    value: $BOT_TOKEN
  - key: ALLOWED_ORIGINS
    scope: RUN_TIME
    value: `${APP_URL}
  
  health_check:
    http_path: /health
    
  routes:
  - path: /api
    preserve_path_prefix: true

# Frontend React App
- name: frontend
  dockerfile_path: frontend/Dockerfile
  source_dir: /
  github:
    repo: $GITHUB_REPO
    branch: main
    deploy_on_push: true
  
  http_port: 80
  
  instance_count: 1
  instance_size_slug: basic-xxs
  
  envs:
  - key: REACT_APP_API_URL
    scope: BUILD_TIME
    value: `${backend.PUBLIC_URL}
  
  routes:
  - path: /

# Telegram Bot
- name: bot
  dockerfile_path: bot/Dockerfile
  source_dir: /
  github:
    repo: $GITHUB_REPO
    branch: main
    deploy_on_push: true
  
  http_port: 8080
  
  instance_count: 1
  instance_size_slug: basic-xxs
  
  envs:
  - key: BOT_TOKEN
    scope: RUN_TIME
    value: $BOT_TOKEN
  - key: WEBAPP_URL
    scope: RUN_TIME
    value: `${frontend.PUBLIC_URL}
  - key: API_URL
    scope: RUN_TIME
    value: `${backend.PUBLIC_URL}
"@

$appYaml | Out-File -FilePath ".do/app.yaml" -Encoding UTF8 -Force
Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!" -ForegroundColor Green
Write-Host ""

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
Write-Host "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
Write-Host "   (—ç—Ç–æ –∑–∞–π–º—ë—Ç 5-10 –º–∏–Ω—É—Ç)" -ForegroundColor Gray

$existingApp = doctl apps list --format Spec.Name --no-header | Select-String -Pattern $APP_NAME -Quiet
if ($existingApp) {
    Write-Host "‚ö†Ô∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..." -ForegroundColor Yellow
    doctl apps update $APP_NAME --spec .do/app.yaml 2>$null
} else {
    doctl apps create --spec .do/app.yaml 2>$null
}

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!" -ForegroundColor Red
    Write-Host ""
    Write-Host "üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–µ–ø–ª–æ—è:" -ForegroundColor Yellow
    Write-Host "   1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://cloud.digitalocean.com/apps" -ForegroundColor White
    Write-Host "   2. –ù–∞–∂–º–∏—Ç–µ 'Create App'" -ForegroundColor White
    Write-Host "   3. –í—ã–±–µ—Ä–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $GITHUB_REPO" -ForegroundColor White
    Write-Host "   4. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ DEPLOYMENT_OPTIONS_RU.md" -ForegroundColor White
    Write-Host ""
    pause
    exit 1
}

Write-Host "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!" -ForegroundColor Green
Write-Host ""

# –û–∂–∏–¥–∞–Ω–∏–µ –¥–µ–ø–ª–æ—è
Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è..." -ForegroundColor Yellow
Write-Host "   (–ø–æ–¥–æ–∂–¥–∏—Ç–µ 5-10 –º–∏–Ω—É—Ç)" -ForegroundColor Gray
Write-Host "   –ú–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º: https://cloud.digitalocean.com/apps" -ForegroundColor Gray
Write-Host ""

$deployed = $false
$attempts = 0
$maxAttempts = 30

while (-not $deployed -and $attempts -lt $maxAttempts) {
    Start-Sleep -Seconds 20
    $attempts++
    
    $appStatus = doctl apps list --format Spec.Name,ActiveDeployment.Phase --no-header 2>$null | 
                 Select-String -Pattern $APP_NAME
    
    if ($appStatus -match "ACTIVE") {
        $deployed = $true
        Write-Host "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!" -ForegroundColor Green
    } elseif ($appStatus -match "ERROR|FAILED") {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è!" -ForegroundColor Red
        Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: https://cloud.digitalocean.com/apps" -ForegroundColor White
        pause
        exit 1
    } else {
        Write-Host "   ‚è≥ –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ... (–ø–æ–ø—ã—Ç–∫–∞ $attempts/$maxAttempts)" -ForegroundColor Gray
    }
}

if (-not $deployed) {
    Write-Host "‚ö†Ô∏è  –î–µ–ø–ª–æ–π –≤—Å—ë –µ—â—ë –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ" -ForegroundColor Yellow
    Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: https://cloud.digitalocean.com/apps" -ForegroundColor White
}
Write-Host ""

# –ü–æ–ª—É—á–µ–Ω–∏–µ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
Write-Host "üåê –ü–æ–ª—É—á–µ–Ω–∏–µ URLs..." -ForegroundColor Yellow
$APP_URL = doctl apps list --format Spec.Name,DefaultIngress --no-header 2>$null | 
           Select-String -Pattern $APP_NAME | 
           ForEach-Object { ($_ -split '\s+')[1] }

if ($APP_URL) {
    $FRONTEND_URL = "https://$APP_URL"
    $BACKEND_URL = "https://$APP_URL/api"
    Write-Host "‚úÖ URLs –ø–æ–ª—É—á–µ–Ω—ã!" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  URLs –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Yellow
    $FRONTEND_URL = "https://$APP_NAME.ondigitalocean.app"
    $BACKEND_URL = "https://$APP_NAME.ondigitalocean.app/api"
}
Write-Host ""

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
Write-Host ""
Write-Host "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" -ForegroundColor Green
Write-Host "‚ïë          ‚úÖ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–Å–ù!              ‚ïë" -ForegroundColor Green
Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" -ForegroundColor Green
Write-Host ""
Write-Host "üåê –í–∞—à–∏ URLs:" -ForegroundColor Cyan
Write-Host "   Frontend:  $FRONTEND_URL" -ForegroundColor White
Write-Host "   Backend:   $BACKEND_URL" -ForegroundColor White
Write-Host "   Dashboard: https://cloud.digitalocean.com/apps" -ForegroundColor White
Write-Host ""
Write-Host "üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:" -ForegroundColor Cyan
Write-Host "   Cluster:   $DB_CLUSTER" -ForegroundColor White
Write-Host "   Dashboard: https://cloud.digitalocean.com/databases" -ForegroundColor White
Write-Host ""
Write-Host "ü§ñ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
Write-Host ""
Write-Host "   1Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram" -ForegroundColor White
Write-Host "   2Ô∏è‚É£  /mybots ‚Üí PlanerSeptember ‚Üí Bot Settings ‚Üí Menu Button" -ForegroundColor White
Write-Host "   3Ô∏è‚É£  –ù–∞–∑–≤–∞–Ω–∏–µ: –û—Ç–∫—Ä—ã—Ç—å Vectora" -ForegroundColor White
Write-Host "   4Ô∏è‚É£  URL: $FRONTEND_URL" -ForegroundColor Cyan
Write-Host ""
Write-Host "   5Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ @PlanerPlanerbot" -ForegroundColor White
Write-Host "   6Ô∏è‚É£  –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start" -ForegroundColor White
Write-Host "   7Ô∏è‚É£  –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É!" -ForegroundColor White
Write-Host ""
Write-Host "üìö –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Cyan
Write-Host "   # –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" -ForegroundColor Gray
Write-Host "   doctl apps logs $APP_NAME --type run" -ForegroundColor White
Write-Host ""
Write-Host "   # –°—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è" -ForegroundColor Gray
Write-Host "   doctl apps list" -ForegroundColor White
Write-Host ""
Write-Host "   # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫" -ForegroundColor Gray
Write-Host "   doctl apps create-deployment $APP_NAME" -ForegroundColor White
Write-Host ""
Write-Host "   # –£–¥–∞–ª–∏—Ç—å –≤—Å—ë" -ForegroundColor Gray
Write-Host "   doctl apps delete $APP_NAME" -ForegroundColor White
Write-Host "   doctl databases delete $DB_CLUSTER" -ForegroundColor White
Write-Host ""
Write-Host "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:" -ForegroundColor Magenta
Write-Host "   ~`$12/–º–µ—Å—è—Ü (Basic Plan)" -ForegroundColor White
Write-Host "   –° GitHub Student Pack: 1 –≥–æ–¥ –ë–ï–°–ü–õ–ê–¢–ù–û (`$200 –∫—Ä–µ–¥–∏—Ç–æ–≤)" -ForegroundColor Green
Write-Host ""
Write-Host "üéì GitHub Student Pack:" -ForegroundColor Cyan
Write-Host "   https://education.github.com/pack" -ForegroundColor White
Write-Host ""
Write-Host "üéâ –ì–æ—Ç–æ–≤–æ! Vectora —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ DigitalOcean!" -ForegroundColor Green
Write-Host ""

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª
$deployInfo = @"
Vectora DigitalOcean Deployment Info
=====================================
–î–∞—Ç–∞ –¥–µ–ø–ª–æ—è: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")

URLs:
- Frontend: $FRONTEND_URL
- Backend:  $BACKEND_URL
- Dashboard: https://cloud.digitalocean.com/apps

–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:
- Cluster: $DB_CLUSTER
- Dashboard: https://cloud.digitalocean.com/databases

DigitalOcean:
- App Name: $APP_NAME
- Region: $REGION (Frankfurt)

Telegram Bot:
- Username: @PlanerPlanerbot
- Token: $BOT_TOKEN

Menu Button URL:
$FRONTEND_URL

GitHub Student Pack:
- $200 –∫—Ä–µ–¥–∏—Ç–æ–≤ = 1 –≥–æ–¥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞
- https://education.github.com/pack
"@

$deployInfo | Out-File -FilePath "digitalocean-deploy-info.txt" -Encoding UTF8
Write-Host "üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: digitalocean-deploy-info.txt" -ForegroundColor Cyan
Write-Host ""

pause
